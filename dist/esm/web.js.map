{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,gBAAiB,SAAQ,SAAS;IAC7C,KAAK,CAAC,IAAI,CAAC,OAA0B;QACnC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;IACjB,CAAC;IACD,KAAK,CAAC,OAAO;QACX,IAAI,MAAM,GAAC,EAAC,KAAK,EAAC,EAAE,EAAC,CAAC;QACtB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,KAAK,CAAC,cAAc;QAClB,IAAI,MAAM,GAAC,EAAC,IAAI,EAAC,EAAE,EAAC,UAAU,EAAC,IAAI,EAAC,CAAC;QACrC,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,KAAK,CAAC,aAAa;QACjB,IAAI,MAAM,GAAC,EAAC,KAAK,EAAC,EAAE,EAAC,CAAC;QACtB,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,KAAK,CAAC,eAAe;QACnB,IAAI,MAAM,GAAC,EAAC,aAAa,EAAC,KAAK,EAAC,CAAC;QACjC,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,KAAK,CAAC,OAAO;QACX,IAAI,MAAM,GAAC,EAAC,KAAK,EAAC,EAAE,EAAC,CAAC;QACtB,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,KAAK,CAAC,cAAc,CAAC,OAA6C;QAChE,IAAI,MAAM,GAAC,EAAC,KAAK,EAAC,EAAE,EAAC,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;QACvC,OAAO,MAAM,CAAC;IAChB,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { SpeechAndTextPlugin } from './definitions';\n\nexport class SpeechAndTextWeb extends WebPlugin implements SpeechAndTextPlugin {\n  async echo(options: { value: string }): Promise<{ value: string }> {\n    console.log('ECHO', options);\n    return options;\n  }\n  async InitSTT():Promise<{ value: string }>{\n    var result={value:\"\"};\n    return result;\n  }\n\n  async startRecording():Promise<{ text: string, isEndpoint:boolean }>{\n    var result={text:\"\",isEndpoint:true};\n    return result;\n  }\n\n  async stopRecording():Promise<{ value: string }>{\n    var result={value:\"\"};\n    return result;\n  }\n  async checkPermission():Promise<{hasPermission:boolean}>{\n    var result={hasPermission:false};\n    return result;\n  }\n  async InitTTS():Promise<{ value: string }>{\n    var result={value:\"\"};\n    return result;\n  }\n  async generateSpeech(options:{text:string,sid:number,speed:number}):Promise<{ value: string }>{\n    var result={value:\"\"};\n    console.log('generateSpeech', options);\n    return result;\n  }\n}\n"]}