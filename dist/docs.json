{
  "api": {
    "name": "SpeechAndTextPlugin",
    "slug": "speechandtextplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "echo",
        "signature": "(options: { value: string; }) => any",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ value: string; }"
          }
        ],
        "returns": "any",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "echo"
      },
      {
        "name": "InitSTT",
        "signature": "(options: { itype: number; }) => any",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ itype: number; }"
          }
        ],
        "returns": "any",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "initstt"
      },
      {
        "name": "startRecording",
        "signature": "() => any",
        "parameters": [],
        "returns": "any",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "startrecording"
      },
      {
        "name": "stopRecording",
        "signature": "() => any",
        "parameters": [],
        "returns": "any",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "stoprecording"
      },
      {
        "name": "checkPermission",
        "signature": "() => any",
        "parameters": [],
        "returns": "any",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "checkpermission"
      },
      {
        "name": "InitTTS",
        "signature": "(options: { itype: number; }) => any",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ itype: number; }"
          }
        ],
        "returns": "any",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "inittts"
      },
      {
        "name": "generateSpeech",
        "signature": "(options: { text: string; wavName: string; sid: number; speed: number; }) => any",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ text: string; wavName: string; sid: number; speed: number; }"
          }
        ],
        "returns": "any",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "generatespeech"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'onRecognizerResult', listenerFunc: (data: { text: string; isEndpoint: boolean; }) => void) => any",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'onRecognizerResult'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(data: { text: string; isEndpoint: boolean; }) => void"
          }
        ],
        "returns": "any",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlisteneronrecognizerresult-"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'onGenerationComplete', listenerFunc: (data: { value: string; }) => void) => any",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'onGenerationComplete'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(data: { value: string; }) => void"
          }
        ],
        "returns": "any",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerongenerationcomplete-"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => any"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [],
  "pluginConfigs": []
}